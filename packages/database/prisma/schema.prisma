// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Backtest {
  id                  String   @id @default(cuid())
  from                DateTime
  to                  DateTime
  timeperiod          String
  initialWalletAmount Float
  finalWalletAmount   Float
  trades              Trade[]
  strategyId          String
  strategy            Strategy @relation(fields: [strategyId], references: [id])
  symbolId            String
  symbol              Symbol   @relation(fields: [symbolId], references: [id])
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Strategy {
  id        String     @id @default(cuid())
  backtests Backtest[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Trade {
  id         String      @id @default(cuid())
  entry      Float
  stopLoss   Float?
  takeProfit Float
  profitLoss Float?
  entryTime  DateTime?
  exitTime   DateTime?
  status     TradeStatus
  symbolId   String
  symbol     Symbol      @relation(fields: [symbolId], references: [id])
  backtestId String?
  backtest   Backtest?   @relation(fields: [backtestId], references: [id])
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

enum TradeStatus {
  AWAIT
  OPEN
  SUCCESS
  FAILED
  CANCELLED
}

model Symbol {
  id        String     @id
  trades    Trade[]
  backtests Backtest[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}
